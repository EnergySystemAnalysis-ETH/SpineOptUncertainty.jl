{
    "object_classes": [
        ["commodity", "A good or product that can be consumed, produced, traded. E.g., electricity, oil, gas, water...", 281473533932880],
        ["connection", "A transfer of commodities between nodes. E.g. electricity line, gas pipeline...", 280378317271233],
        ["model", "An instance of SpineOpt, that specifies general parameters such as the temporal horizon.", 281107035648412],
        ["node", "A universal aggregator of commodify flows over units and connections, with storage capabilities.", 280740554077951],
        ["output", "A variable name from SpineOpt that can be included in a report.", 280743406202948],
        ["report", "A results report from a particular SpineOpt run, including the value of specific variables.", 281108461711708],
        ["stochastic_scenario", "A scenario for stochastic optimisation in SpineOpt.", null],
        ["stochastic_structure", "A group of stochastic scenarios that represent a structure.", null],
        ["temporal_block", "A length of time with a particular resolution.", 280376891207703],
        ["unit", "A conversion of one/many comodities between nodes.", 281470681805429],
        ["unit_constraint", "A constraint over the flows of a specific unit.", null]
    ],
    "relationship_classes": [
        ["connection__from_node", ["connection", "node"], null],
        ["connection__node__node", ["connection", "node", "node"], null],
        ["connection__to_node", ["connection", "node"], null],
        ["model__default_stochastic_structure", ["model", "stochastic_structure"], "Defines the default stochastic structure used for model variables, which will be replaced by more specific definitions"],
        ["model__default_temporal_block", ["model", "temporal_block"], "Defines the default temporal block used for model variables, which will be replaced by more specific definitions"],
        ["model__default_investment_stochastic_structure", ["model", "stochastic_structure"], "Defines the default stochastic structure used for investment variables, which will be replaced by more specific definitions"],
        ["model__default_investment_temporal_block", ["model", "temporal_block"], "Defines the default temporal block used for investment variables, which will be replaced by more specific definitions"],
        ["node__commodity", ["node", "commodity"], null],
        ["node__node", ["node", "node"], "When two nodes are used a a storage, node__node relationship can be used to incorporate diffusion. TODO"],
        ["node__stochastic_structure", ["node", "stochastic_structure"], null],
        ["node__temporal_block", ["node", "temporal_block"], "A unit and the corresponding temporal block."],
        ["parent_stochastic_scenario__child_stochastic_scenario", ["stochastic_scenario", "stochastic_scenario"], null],
        ["report__output", ["report", "output"], "Output object related to a report object are returned to the output database (if they appear in the model as variables)"],
        ["stochastic_structure__stochastic_scenario", ["stochastic_structure", "stochastic_scenario"], null],
        ["unit__from_node", ["unit", "node"], null],
        ["unit__from_node__unit_constraint", ["unit", "node", "unit_constraint"], null],
        ["units_on__stochastic_structure", ["unit", "stochastic_structure"], null],
        ["units_on__temporal_block", ["unit", "temporal_block"], "A node and the corresponding temporal block."],
        ["unit__investment_stochastic_structure", ["unit", "stochastic_structure"], "Sets the stochastic structure for investment decisions - overrides `model__default_investment_stochastic_structure`. TODO: THIS RELATIONSHIP DOESN'T CURRENTLY APPEAR IN THE MODEL!"],
        ["unit__investment_temporal_block", ["unit", "temporal_block"], "Sets the temporal resolution of investment decisions - overrides `model__default_investment_temporal_block`"],
        ["unit__node", ["unit", "node"], "unit__to_node"],
        ["unit__node__node", ["unit", "node", "node"], null],
        ["unit__to_node", ["unit", "node"], null],
        ["unit__to_node__unit_constraint", ["unit", "node", "unit_constraint"], null],
        ["unit__unit_constraint", ["unit", "unit_constraint"], null],
        ["unit__commodity", ["unit", "commodity"], null]
    ],
    "parameter_value_lists": [
        ["balance_type_list", ["balance_type_node", "balance_type_group", "balance_type_none"]],
        ["boolean_value_list", [true, false]],
        ["commodity_physics_list", ["commodity_physics_ptdf", "commodity_physics_lodf", "commodity_physics_none"]],
        ["constraint_sense_list", ["==", ">=", "<="]],
        ["duration_unit_list", ["minute", "hour"]],
        ["node_opf_type_list", ["node_opf_type_reference", "node_opf_type_normal"]],
        ["unit_investment_variable_type_list", ["unit_investment_variable_type_integer", "unit_investment_variable_type_continuous"]],
        ["unit_online_variable_type_list", ["unit_online_variable_type_binary", "unit_online_variable_type_integer", "unit_online_variable_type_linear"]],
        ["connection_type_list", ["connection_type_normal", "connection_type_lossless_bidirectional"]],
        ["write_mps_file_list", ["write_mps_on_no_solve", "write_mps_always", "write_mps_never"]]
    ],
    "object_parameters": [
        ["commodity", "commodity_lodf_tolerance", 0.1, null, "LODF tolerance?"],
        ["commodity", "commodity_physics", "commodity_physics_none", "commodity_physics_list", "Defines if the `commodity` follows lodf or ptdf physics."],
        ["commodity", "commodity_ptdf_threshold", 0.0001, null, "PTDF threshold?"],
        ["connection", "connection_availability_factor", 1.0, null, "Availability of the `connection`, acting as a multiplier on its `connection_capacity`. Typically between 0-1."],
        ["connection", "connection_contingency", null, "boolean_value_list", "A boolean flag for defining a contingency `connection`."],
        ["connection", "connection_flow_cost", null, null, "Variable costs of a flow through a `connection`. E.g. EUR/MWh of energy throughput."],
        ["connection", "connection_monitored", false, "boolean_value_list", "A boolean flag for defining a contingency `connection`."],
        ["connection", "connection_reactance", null, null, "Reactance of a `connection`."],
        ["connection", "connection_resistance", null, null, "Resistance of a `connection`."],
        ["connection", "connection_type", "connection_type_normal", "connection_type_list", "A selector between a normal and a lossless bidirectional `connection`."],
        ["connection", "graph_view_position", null, null, null],
        ["model", "duration_unit", "minute", "duration_unit_list", "Defines the base temporal unit of the `model`. Currently supported values are either an `hour` or a `minute`."],
        ["model", "model_end", {"type": "date_time", "data": "2000-01-02T00:00:00"}, null, "Defines the last timestamp to be modelled. Rolling optimization terminates after passing this point."],
        ["model", "model_start", {"type": "date_time", "data": "2000-01-01T00:00:00"}, null, "Defines the first timestamp to be modelled. Relative `temporal_blocks` refer to this value for their start and end."],
        ["model", "roll_forward", null, null, "Defines how much the model moves ahead in time between solves in a rolling optimization. Without this parameter, everything is solved in as a single optimization."],
        ["model", "write_lodf_file", false, "boolean_value_list", "A boolean flag for whether the LODF values should be written to a results file."],
        ["model", "write_mps_file", null, "write_mps_file_list", "A selector for writing an .mps file of the model."],
        ["model", "write_ptdf_file", false, "boolean_value_list", "A boolean flag for whether the LODF values should be written to a results file."],
        ["node", "balance_type", "balance_type_node", "balance_type_list", "A selector for how the `:nodal_balance` constraint should be handled."],
        ["node", "demand", 0.0, null, "Demand for the `commodity` of a `node`. Energy gains can be represented using negative `demand`."],
        ["node", "fix_node_state", null, null, "Fixes the corresponding `node_state` variable to the provided value. Can be used for e.g. fixing boundary conditions."],
        ["node", "frac_state_loss", 0.0, null, "Self-discharge coefficient for `node_state` variables. Effectively, represents the *loss power per unit of state*."],
        ["node", "graph_view_position", null, null, null],
        ["node", "has_state", false, "boolean_value_list", "A boolean flag for whether a `node` has a `node_state` variable."],
        ["node", "is_reserve_node", false, "boolean_value_list", "A boolean flag for a `reserve_node`?"],
        ["node", "nodal_balance_sense", "==", "constraint_sense", "A selector for `nodal_balance` constraint sense."],
        ["node", "node_opf_type", "node_opf_type_normal", "node_opf_type_list", "A selector for `node_opf_type`?"],
        ["node", "node_slack_penalty", null, null, "A penalty cost for `node_slack_pos` and `node_slack_neg` variables. The slack variables won't be included in the model unless there's a cost defined for them."],
        ["node", "node_state_cap", null, null, "The maximum permitted value for a `node_state` variable."],
        ["node", "node_state_min", 0.0, null, "The minimum permitted value for a `node_state` variable."],
        ["node", "reserve_procurement_cost", null, null, "Procurement cost for reserves?"],
        ["node", "state_coeff", 0.0, null, "Represents the `commodity` content of a `node_state` variable in respect to the `unit_flow` and `connection_flow` variables. Essentially, acts as a coefficient on the `node_state` variable in the `:node_injection` constraint."],
        ["node", "tax_in_unit_flow", null, null, "Tax costs for incoming `unit_flows` on this `node`. E.g. EUR/MWh."],
        ["node", "tax_net_unit_flow", null, null, "Tax costs for net incoming and outgoing `unit_flows` on this `node`. Incoming flows accrue positive net taxes, and outgoing flows accrue negative net taxes."],
        ["node", "tax_out_unit_flow", null, null, "Tax costs for outgoing `unit_flows` from this `node`. E.g. EUR/MWh."],
        ["node", "fractional_demand", 0.0, null, "Fractional `demand` for `node` groups?"],
        ["report", "output_db_url", null, null, "Database url for SpineOpt output."],
        ["temporal_block", "block_end", null, null, "The end time for the `temporal_block`. Can be given either as a `DateTime` for a static end point, or as a `Duration` for an end point relative to the start of the current optimization."],
        ["temporal_block", "block_start", null, null, "The start time for the `temporal_block`. Can be given either as a `DateTime` for a static start point, or as a `Duration` for an start point relative to the start of the current optimization."],
        ["temporal_block", "resolution", {"type": "duration", "data": "1h"}, null, "Temporal resolution of the `temporal_block`. Essentially, divides the period between `block_start` and `block_end` into `TimeSlices` with the input `resolution`."],
        ["unit", "candidate_units", null, null, "Number of units which may be additionally constructed"],
        ["unit", "curtailment_cost", null, null, "Costs for curtailing generation. Essentially, accrues costs whenever `unit_flow` not operating at its maximum available capacity. E.g. EUR/MWh"],
        ["unit", "fix_units_invested", null, null, "Fix the value of the `units_invested` variable."],
        ["unit", "fix_units_invested_available", null, null, "Fix the value of the `units_invested_available` variable"],
        ["unit", "fix_units_on", null, null, "Fix the value of the `units_on` variable."],
        ["unit", "fom_cost", null, null, "Fixed operation and maintenance costs of a `unit`. Essentially, a cost coefficient on the `number_of_units` and `unit_capacity` parameters. E.g. EUR/MWh"],
        ["unit", "graph_view_position", null, null, null],
        ["unit", "min_down_time", null, null, "Minimum downtime of a `unit` after it shuts down."],
        ["unit", "min_up_time", null, null, "Minimum uptime of a `unit` after it starts up."],
        ["unit", "number_of_units", 1.0, null, "Denotes the number of 'sub units' aggregated to form the modelled `unit`."],
        ["unit", "online_variable_type", "unit_online_variable_type_linear", "unit_online_variable_type_list", "A selector for how the `units_on` variable is represented within the model."],
        ["unit", "shut_down_cost", null, null, "Costs of shutting down a 'sub unit', e.g. EUR/shutdown."],
        ["unit", "start_up_cost", null, null, "Costs of starting up a 'sub unit', e.g. EUR/startup."],
        ["unit", "unit_availability_factor", 1.0, null, "Availability of the `unit`, acting as a multiplier on its `unit_capacity`. Typically between 0-1."],
        ["unit", "unit_investment_cost", null, null, "Investment cost per 'sub unit' built."],
        ["unit", "unit_investment_lifetime", null, null, "Minimum lifetime for investment decisions."],
        ["unit", "unit_investment_variable_type", "unit_investment_variable_type_continuous", "unit_investment_variable_type_list", "Determines whether investment variable is integer or continuous."],
        ["unit_constraint", "constraint_sense", "==", "constraint_sense_list", "A selector for the sense of the `unit_constraint`."],
        ["unit_constraint", "right_hand_side", 0.0, null, "The right-hand side of the `unit_constraint`. Can be used e.g. for complicated time-dependent efficiency approximations."]
    ],
    "relationship_parameters": [
        ["connection__from_node", "connection_capacity", null, null, "Limits the `connection_flow` variable from the `from_node`. `from_node` can be a group of `nodes`, in which case the sum of the `connection_flow` is constrained."],
        ["connection__from_node", "connection_conv_cap_to_flow", 1.0, null, "Optional coefficient for `connection_capacity` unit conversions in the case the `connection_capacity` value is incompatible with the desired `connection_flow` units."],
        ["connection__from_node", "connection_emergency_capacity", null, null, "Emergy capacity of a `connection`?"],
        ["connection__from_node", "fix_connection_flow", null, null, "Fix the value of the `connection_flow` variable."],
        ["connection__from_node", "graph_view_position", null, null, null],
        ["connection__node__node", "connection_flow_delay", {"type": "duration", "data": "0h"}, null, "Delays the `connection_flows` associated with the latter `node` in respect to the `connection_flows` associated with the first `node`."],
        ["connection__node__node", "fix_ratio_out_in_connection_flow", null, null, "Fix the ratio between the `connection_flow` from the first `node` and the `connection_flow` to the second `node`."],
        ["connection__node__node", "max_ratio_out_in_connection_flow", null, null, "Maximum ratio between the `connection_flow` from the first `node` and the `connection_flow` to the second `node`."],
        ["connection__node__node", "min_ratio_out_in_connection_flow", null, null, "Minimum ratio between the `connection_flow` from the first `node` and the `connection_flow` to the second `node`."],
        ["connection__to_node", "connection_capacity", null, null, "Limits the `connection_flow` variable to the `to_node`. `to_node` can be a group of `nodes`, in which case the sum of the `connection_flow` is constrained."],
        ["connection__to_node", "connection_conv_cap_to_flow", 1.0, null, "Optional coefficient for `connection_capacity` unit conversions in the case the `connection_capacity` value is incompatible with the desired `connection_flow` units."],
        ["connection__to_node", "connection_emergency_capacity", null, null, "Emergy capacity of a `connection`?"],
        ["connection__to_node", "fix_connection_flow", null, null, "Fix the value of the `connection_flow` variable."],
        ["connection__to_node", "graph_view_position", null, null, null],
        ["node__node", "diff_coeff", 0.0, null, "Commodity diffusion coefficient between two `nodes`. Effectively, denotes the *diffusion power per unit of state* from the first `node` to the second."],
        ["stochastic_structure__stochastic_scenario", "stochastic_scenario_end", null, null, "A `Duration` for when a `stochastic_scenario` ends and its `child_stochastic_scenarios` start. Values are interpreted relative to the start of the current solve, and if no value is given, the `stochastic_scenario` is assumed to continue indefinitely."],
        ["stochastic_structure__stochastic_scenario", "weight_relative_to_parents", 1.0, null, "The weight of the `stochastic_scenario` in the objective function relative to its parents."],
        ["unit__from_node", "fix_nonspin_ramp_up_unit_flow", null, null, "Fix the `nonspin_ramp_up_unit_flow` variable."],
        ["unit__from_node", "fix_nonspin_units_starting_up", null, null, "Fix the `nonspin_units_starting_up` variable."],
        ["unit__from_node", "fix_ramp_up_unit_flow", null, null, "Fix the `ramp_up_unit_flow` variable."],
        ["unit__from_node", "fix_start_up_unit_flow", null, null, "Fix the `start_up_unit_flow` variable."],
        ["unit__from_node", "fix_unit_flow", null, null, "Fix the `unit_flow` variable."],
        ["unit__from_node", "fix_unit_flow_op", null, null, "Fix the `unit_flow_op` variable."],
        ["unit__from_node", "fuel_cost", null, null, "Variable fuel costs than can be attributed to a `unit_flow`. E.g. EUR/MWh"],
        ["unit__from_node", "graph_view_position", null, null, null],
        ["unit__from_node", "max_res_startup_ramp", null, null, "Maximum non-spinning reserve ramp-up for startups?"],
        ["unit__from_node", "max_startup_ramp", null, null, "Maximum ramp-up during startups?"],
        ["unit__from_node", "min_res_startup_ramp", null, null, "Minimum non-spinning reserve ramp-up for startups?"],
        ["unit__from_node", "min_startup_ramp", null, null, "Minimum ramp-up during startups?"],
        ["unit__from_node", "minimum_operating_point", null, null, "Minimum level for the `unit_flow` relative to the `units_on` online capacity."],
        ["unit__from_node", "operating_cost", null, null, "Operating costs of a `unit_flow` variable. E.g. EUR/MWh."],
        ["unit__from_node", "operating_points", null, null, "Operating points for piecewise-linear `unit` efficiency approximations?"],
        ["unit__from_node", "ramp_up_limit", null, null, "Limit the maximum ramp-up rate of a `unit_flow` variable."],
        ["unit__from_node", "unit_capacity", null, null, "Maximum `unit_flow` capacity of a single 'sub_unit' of the `unit`."],
        ["unit__from_node", "unit_conv_cap_to_flow", 1.0, null, "Optional coefficient for `unit_capacity` unit conversions in the case the `unit_capacity` value is incompatible with the desired `unit_flow` units."],
        ["unit__from_node", "vom_cost", null, null, "Variable operating costs of a `unit_flow` variable. E.g. EUR/MWh."],
        ["unit__from_node__unit_constraint", "graph_view_position", null, null, null],
        ["unit__from_node__unit_constraint", "unit_flow_coefficient", 0.0, null, "Coefficient of a `unit_flow` variable for a custom `unit_constraint`?"],
        ["unit__node__node", "fix_ratio_in_in_unit_flow", null, null, "Fix the ratio between two `unit_flows` coming into the `unit` from the two `nodes`."],
        ["unit__node__node", "fix_ratio_in_out_unit_flow", null, null, "Fix the ratio between an incoming `unit_flow` from the first `node` and an outgoing `unit_flow` to the second `node`."],
        ["unit__node__node", "fix_ratio_out_in_unit_flow", null, null, "Fix the ratio between an outgoing `unit_flow` to the first `node` and an incoming `unit_flow` from the second `node`."],
        ["unit__node__node", "fix_ratio_out_out_unit_flow", null, null, "Fix the ratio between two `unit_flows` going from the `unit` into the two `nodes`."],
        ["unit__node__node", "fix_units_on_coefficient_in_in", 0.0, null, "Optional coefficient for the `units_on` variable impacting the `fix_ratio_in_in_unit_flow` constraint."],
        ["unit__node__node", "fix_units_on_coefficient_in_out", 0.0, null, "Optional coefficient for the `units_on` variable impacting the `fix_ratio_in_out_unit_flow` constraint."],
        ["unit__node__node", "fix_units_on_coefficient_out_in", 0.0, null, "Optional coefficient for the `units_on` variable impacting the `fix_ratio_out_in_unit_flow` constraint."],
        ["unit__node__node", "fix_units_on_coefficient_out_out", 0.0, null, "Optional coefficient for the `units_on` variable impacting the `fix_ratio_out_out_unit_flow` constraint."],
        ["unit__node__node", "max_ratio_in_in_unit_flow", null, null, "Maximum ratio between two `unit_flows` coming into the `unit` from the two `nodes`."],
        ["unit__node__node", "max_ratio_in_out_unit_flow", null, null, "Maximum ratio between an incoming `unit_flow` from the first `node` and an outgoing `unit_flow` to the second `node`."],
        ["unit__node__node", "max_ratio_out_in_unit_flow", null, null, "Maximum ratio between an outgoing `unit_flow` to the first `node` and an incoming `unit_flow` from the second `node`."],
        ["unit__node__node", "max_ratio_out_out_unit_flow", null, null, "Maximum ratio between two `unit_flows` going from the `unit` into the two `nodes`."],
        ["unit__node__node", "max_units_on_coefficient_in_in", 0.0, null, "Optional coefficient for the `units_on` variable impacting the `max_ratio_in_in_unit_flow` constraint."],
        ["unit__node__node", "max_units_on_coefficient_in_out", 0.0, null, "Optional coefficient for the `units_on` variable impacting the `max_ratio_in_out_unit_flow` constraint."],
        ["unit__node__node", "max_units_on_coefficient_out_in", 0.0, null, "Optional coefficient for the `units_on` variable impacting the `max_ratio_out_in_unit_flow` constraint.",
        ["unit__node__node", "max_units_on_coefficient_out_out", 0.0, null, "Optional coefficient for the `units_on` variable impacting the `max_ratio_out_out_unit_flow` constraint."],
        ["unit__node__node", "min_ratio_in_in_unit_flow", null, null, "Minimum ratio between two `unit_flows` coming into the `unit` from the two `nodes`."],
        ["unit__node__node", "min_ratio_in_out_unit_flow", null, null, "Minimum ratio between an incoming `unit_flow` from the first `node` and an outgoing `unit_flow` to the second `node`."],
        ["unit__node__node", "min_ratio_out_in_unit_flow", null, null, "Minimum ratio between an outgoing `unit_flow` to the first `node` and an incoming `unit_flow` from the second `node`."],
        ["unit__node__node", "min_ratio_out_out_unit_flow", null, null, "Minimum ratio between two `unit_flows` going from the `unit` into the two `nodes`."],
        ["unit__node__node", "min_units_on_coefficient_in_in", 0.0, null, "Optional coefficient for the `units_on` variable impacting the `min_ratio_in_in_unit_flow` constraint."],
        ["unit__node__node", "min_units_on_coefficient_in_out", 0.0, null, "Optional coefficient for the `units_on` variable impacting the `min_ratio_in_out_unit_flow` constraint."],
        ["unit__node__node", "min_units_on_coefficient_out_in", 0.0, null, "Optional coefficient for the `units_on` variable impacting the `min_ratio_out_in_unit_flow` constraint."],
        ["unit__node__node", "min_units_on_coefficient_out_out", 0.0, null, "Optional coefficient for the `units_on` variable impacting the `min_ratio_out_out_unit_flow` constraint."],
        ["unit__to_node", "fix_nonspin_ramp_up_unit_flow", null, null, null],
        ["unit__to_node", "fix_nonspin_units_starting_up", null, null, null],
        ["unit__to_node", "fix_ramp_up_unit_flow", null, null, null],
        ["unit__to_node", "fix_start_up_unit_flow", null, null, null],
        ["unit__to_node", "fix_unit_flow", null, null, null],
        ["unit__to_node", "fix_unit_flow_op", null, null, null],
        ["unit__to_node", "fuel_cost", null, null, null],
        ["unit__to_node", "graph_view_position", null, null, null],
        ["unit__to_node", "max_res_startup_ramp", null, null, null],
        ["unit__to_node", "max_startup_ramp", null, null, null],
        ["unit__to_node", "min_res_startup_ramp", null, null, null],
        ["unit__to_node", "min_startup_ramp", null, null, null],
        ["unit__to_node", "minimum_operating_point", null, null, null],
        ["unit__to_node", "operating_cost", null, null, null],
        ["unit__to_node", "operating_points", null, null, null],
        ["unit__to_node", "ramp_up_limit", null, null, null],
        ["unit__to_node", "unit_capacity", null, null, null],
        ["unit__to_node", "unit_conv_cap_to_flow", 1.0, null, null],
        ["unit__to_node", "vom_cost", null, null, null],
        ["unit__to_node__unit_constraint", "graph_view_position", null, null, null],
        ["unit__to_node__unit_constraint", "unit_flow_coefficient", 0.0, null, null],
        ["unit__unit_constraint", "units_on_coefficient", null, null, null],
        ["unit__commodity", "max_cum_in_unit_flow_bound", null, null, null]
    ]
}
